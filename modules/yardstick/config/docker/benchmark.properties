# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Contains all benchmarks
#

now0=`date +'%H%M%S'`

# JVM options.

# Uncomment to enable concurrent garbage collection (GC) if you encounter long GC pauses.
JVM_OPTS=\
-Xms6g \
-Xmx6g \
-DIGNITE_QUIET=false \
-XX:+PrintGCDetails \
-verbose:gc \
-XX:+UseParNewGC \
-XX:+UseConcMarkSweepGC \
-XX:+PrintGCDateStamps \
-Xloggc:GC_LOG_PATH

# Java 11 jvm opts.
#JVM_OPTS=\
#-Xms6g \
#-Xmx6g \
#-DIGNITE_QUIET=false \
#-Xlog:gc*:file=GC_LOG_PATH \
#--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED \
#--add-exports=java.base/sun.nio.ch=ALL-UNNAMED \
#--add-exports=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED \
#--add-exports=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED \
#--add-exports=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED \
#--illegal-access=permit

#Ignite version
ver="RELEASE-"

# List of default probes.
# Add DStatProbe or VmStatProbe if your OS supports it (e.g. if running on Linux).
BENCHMARK_DEFAULT_PROBES=ThroughputLatencyProbe,PercentileProbe,DStatProbe

# Packages where the specified benchmark is searched by reflection mechanism.
BENCHMARK_PACKAGES=org.yardstickframework,org.apache.ignite.yardstick

# Flag which indicates to restart the servers before every benchmark execution.
#RESTART_SERVERS=true
RESTART_SERVERS=172.25.1.49:0:5:5:5,172.25.1.49:1:5:5:5

# Probe point writer class name.
# BENCHMARK_WRITER=

# Comma-separated list of the hosts to run BenchmarkServers on. 2 nodes on local host are enabled by default.
SERVER_HOSTS=172.25.1.49,172.25.1.49,172.25.1.50
#SERVER_HOSTS=localhost

# Comma-separated list of the hosts to run BenchmarkDrivers on. 1 node on local host is enabled by default.
DRIVER_HOSTS=172.25.1.50,172.25.1.50
#DRIVER_HOSTS=localhost
# Remote username.
# REMOTE_USER=

# Number of nodes, used to wait for the specified number of nodes to start.
nodesNum=$((`echo ${SERVER_HOSTS} | tr ',' '\n' | wc -l` + `echo ${DRIVER_HOSTS} | tr ',' '\n' | wc -l`))

# Backups count.
b=1

# Warmup.
w=6

# Duration.
d=20

# Threads count.
t=8

# Sync mode.
sm=PRIMARY_SYNC

# Jobs.
j=10

#JAVA_HOME=/usr/lib/jvm/java-8-oracle
#JAVA_HOME=/docker-java-home

SET_IPFINDER=true

# Path to remote work directory. If set yardstick will copy files into that path and run benchmarks using that path as
# a home directory.
WORK_DIR=/home/oostanin/somedir

RUN_SERVER_MODE=DOCKER
RUN_DRIVER_MODE=DOCKER

DOCKER_CONTEXT_PATH=config/docker/docker-context-default.yaml

# Run configuration which contains all benchmarks.
# Note that each benchmark is set to run for 300 seconds (5 min) with warm-up set to 60 seconds (1 minute).
CONFIGS=\
-dn IgnitePutBenchmark,\
-dn IgnitePutGetBenchmark